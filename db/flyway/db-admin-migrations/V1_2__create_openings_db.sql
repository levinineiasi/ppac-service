CREATE TABLE IF NOT EXISTS OPENINGS (
    ID UUID PRIMARY KEY,
    HAS_TECHNICAL_INTERVIEW BOOLEAN NOT NULL,
    HAS_TECHNICAL_TEST BOOLEAN NOT NULL,
    PERIOD_COUNT INTEGER NOT NULL CHECK(PERIOD_COUNT >= 0),
    PERIOD_TYPE VARCHAR(12) CHECK (PERIOD_TYPE IN ('WEEKS','MONTHS')),
    OPEN_POSITIONS INTEGER NOT NULL CHECK(OPEN_POSITIONS >= 0),
    ACCEPT_ON_CLOSING_OPPORTUNITY BOOLEAN NOT NULL,
    SIGN_AGREEMENT BOOLEAN NOT NULL,
    AVAILABLE BOOLEAN NOT NULL,
    TITLE VARCHAR(50),
    DESCRIPTION VARCHAR(255),
    REQUIREMENTS VARCHAR(255),
    RESTRICTIONS VARCHAR(255),
    RECRUITMENT_PROCESS VARCHAR(255),
    START_DATE DATE
);

CREATE TABLE IF NOT EXISTS TRAINERS (
                          ID UUID PRIMARY KEY,
                          NAME VARCHAR(50) NOT NULL,
                          DESCRIPTION VARCHAR(255) NOT NULL,
                          LINKEDIN_URL VARCHAR(255),
                          AVATAR VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS OPENINGS_TRAINERS (
       OPENING_ENTITY_ID UUID NOT NULL,
       TRAINERS_ID UUID NOT NULL,
       FOREIGN KEY (OPENING_ENTITY_ID) REFERENCES OPENINGS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
       FOREIGN KEY (TRAINERS_ID) REFERENCES TRAINERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
       PRIMARY KEY (OPENING_ENTITY_ID, TRAINERS_ID)
);

CREATE TABLE IF NOT EXISTS OPENING_ENTITY_KEY_WORDS (
    OPENING_ENTITY_ID UUID NOT NULL,
    KEY_WORDS VARCHAR(255) DEFAULT NULL,
    FOREIGN KEY (OPENING_ENTITY_ID) REFERENCES OPENINGS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (OPENING_ENTITY_ID, KEY_WORDS)
);

CREATE TABLE IF NOT EXISTS OPENING_ENTITY_CUSTOM_KEY_WORDS (
    OPENING_ENTITY_ID UUID NOT NULL,
    CUSTOM_KEY_WORDS  varchar(255) DEFAULT NULL,
    FOREIGN KEY (OPENING_ENTITY_ID) REFERENCES OPENINGS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (OPENING_ENTITY_ID, CUSTOM_KEY_WORDS)
    );